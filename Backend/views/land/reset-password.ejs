<!-- filepath: c:\Users\USER\desktop\folder\vertex\Backend\views\land\reset-password.ejs -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reset Password</title>
    <style>
      body {
        background: #0a0a0a;
        color: #fff;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
      }
      .reset-container {
        background: #181818;
        padding: 32px 28px;
        border-radius: 16px;
        box-shadow: 0 0 30px rgba(106, 0, 255, 0.2);
        width: 100%;
        max-width: 370px;
      }
      h2 {
        color: #6a00ff;
        text-align: center;
        margin-bottom: 24px;
      }
      .input-group {
        margin-bottom: 22px;
        position: relative;
      }
      .input-group input {
        width: 100%;
        padding: 14px 16px;
        border: none;
        border-bottom: 2px solid #6a00ff;
        background: transparent;
        color: #fff;
        font-size: 16px;
        outline: none;
        transition: border-color 0.3s;
      }
      .input-group label {
        position: absolute;
        left: 16px;
        top: 14px;
        color: #aaa;
        pointer-events: none;
        transition: 0.3s;
      }
      .input-group input:focus ~ label,
      .input-group input:not(:placeholder-shown) ~ label {
        top: -14px;
        left: 0;
        color: #6a00ff;
        font-size: 12px;
      }
      .btn {
        width: 100%;
        background: linear-gradient(45deg, #6a00ff, #9c27b0);
        color: #fff;
        border: none;
        padding: 14px;
        border-radius: 30px;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        margin-top: 10px;
        transition: background 0.3s;
      }
      .btn:hover {
        background: linear-gradient(45deg, #9c27b0, #6a00ff);
      }
      .message {
        margin-top: 18px;
        text-align: center;
        font-size: 1rem;
      }
      .success {
        color: #10b981;
      }
      .error {
        color: #ef4444;
      }
    </style>
  </head>
  <body>
    <div class="reset-container">
      <h2>Reset Your Password</h2>
      <form
        id="resetPasswordForm"
        action="/api/auth/reset-password"
        method="POST"
        autocomplete="off"
      >
        <input type="hidden" name="token" value="<%= token %>" />
        <input type="hidden" name="email" value="<%= email %>" />
        <div class="input-group">
          <input
            type="password"
            name="password"
            id="password"
            required
            placeholder=" "
            minlength="6"
          />
          <label for="password">New Password</label>
        </div>
        <div class="input-group">
          <input
            type="password"
            name="confirmPassword"
            id="confirmPassword"
            required
            placeholder=" "
            minlength="6"
          />
          <label for="confirmPassword">Confirm Password</label>
        </div>
        <button type="submit" class="btn">Reset Password</button>
        <div id="msg" class="message"></div>
      </form>
    </div>
    <script>
      document
        .getElementById("resetPasswordForm")
        .addEventListener("submit", async function (e) {
          e.preventDefault();
          const password = document.getElementById("password").value;
          const confirmPassword =
            document.getElementById("confirmPassword").value;
          const msg = document.getElementById("msg");
          msg.textContent = "";
          msg.className = "message";
          if (password.length < 6) {
            msg.textContent = "Password must be at least 6 characters.";
            msg.classList.add("error");
            return;
          }
          if (password !== confirmPassword) {
            msg.textContent = "Passwords do not match.";
            msg.classList.add("error");
            return;
          }
          const formData = new FormData(this);
          const data = Object.fromEntries(formData.entries());
          try {
            const response = await fetch("/api/auth/reset-password", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                email: data.email,
                token: data.token,
                newPassword: data.password,
              }),
            });
            const text = await response.text();
            if (response.ok) {
              msg.textContent = text;
              msg.classList.add("success");
              this.reset();
            } else {
              msg.textContent = text;
              msg.classList.add("error");
            }
          } catch (err) {
            msg.textContent = "Network error. Please try again.";
            msg.classList.add("error");
          }
        });
    </script>
  </body>
</html>
