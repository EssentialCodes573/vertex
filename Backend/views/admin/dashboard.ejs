<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Admin Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      body {
        font-family: "Inter", sans-serif;
      }

      /* Custom focus-visible for better accessibility (optional, Tailwind often handles this well) */
      button:focus-visible,
      a:focus-visible,
      input:focus-visible {
        outline: 2px solid theme("colors.blue.500");
        outline-offset: 2px;
      }
    </style>
  </head>

  <body class="bg-gray-100 min-h-screen">
    <nav class="bg-white shadow px-8 py-4 flex justify-between items-center">
      <div class="text-2xl font-bold text-blue-600">Admin Dashboard</div>
      <div>
        <a
          href="/logout"
          class="text-gray-600 hover:text-blue-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 rounded"
          aria-label="Logout from admin panel"
          >Logout</a
        >
      </div>
    </nav>
    <main class="max-w-6xl mx-auto mt-10 p-4 sm:p-6 lg:p-8">
      <h1 class="text-3xl font-semibold mb-6 text-gray-800" id="users-heading">
        Registered Users
      </h1>

      <div class="mb-6">
        <label for="user-search" class="sr-only">Search users</label>
        <input
          type="text"
          id="user-search"
          onkeyup="filterUsers()"
          placeholder="Search by username or email..."
          class="w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500"
          aria-label="Search users by username or email"
        />
      </div>

      <div class="bg-white rounded-lg shadow overflow-x-auto">
        <table class="min-w-full table-auto" aria-labelledby="users-heading">
          <thead>
            <tr class="bg-gray-200 text-gray-700">
              <th scope="col" class="px-4 py-3 text-left text-sm font-medium">
                Username
              </th>
              <th scope="col" class="px-4 py-3 text-left text-sm font-medium">
                Email
              </th>
              <th scope="col" class="px-4 py-3 text-left text-sm font-medium">
                Deposit Amount (â‚¦)
              </th>
              <th scope="col" class="px-4 py-3 text-left text-sm font-medium">
                Actions
              </th>
            </tr>
          </thead>
          <tbody id="user-table-body">
            <% if (users && users.length> 0) { %> <% users.forEach(user=> { %>
            <tr class="border-b hover:bg-gray-50 user-row">
              <td class="px-4 py-3 whitespace-nowrap"><%= user.username %></td>
              <td class="px-4 py-3 whitespace-nowrap"><%= user.email %></td>
              <td
                class="px-4 py-3 whitespace-nowrap font-semibold text-green-600"
              >
                <%= user.balance.toLocaleString() %>
              </td>
              <td class="px-4 py-3 whitespace-nowrap flex gap-2">
                <a
                  href="/admin/users/<%= user._id %>"
                  class="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 text-sm focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
                  aria-label="View profile for <%= user.username %>"
                  >View Profile</a
                >
                <form class="inline-block">
                  <button
                    type="button"
                    class="open-confirm-modal bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 text-sm focus:outline-none focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2"
                    data-user-id="<%= user._id %>"
                    data-action="/admin/users/<%= user._id %>/delete"
                    aria-label="Delete user <%= user.username %>"
                  >
                    Delete
                  </button>
                </form>
              </td>
            </tr>
            <% }) %> <% } else { %>
            <tr>
              <td
                colspan="4"
                class="px-4 py-8 text-center text-gray-500"
                id="no-users-message"
              >
                No users found.
              </td>
            </tr>
            <% } %>
          </tbody>
        </table>
        <div
          id="no-filtered-users-message"
          class="text-center text-gray-500 py-8 hidden"
        >
          No users match your search.
        </div>
      </div>

      <!-- Confirmation Modal -->
      <div
        id="confirmModal"
        class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden"
      >
        <div
          class="bg-white rounded-lg shadow-lg p-6 w-full max-w-sm text-center"
        >
          <h2 class="text-xl font-bold text-gray-800 mb-4">Confirm Deletion</h2>
          <p class="text-gray-600 mb-6">
            Are you sure you want to delete this user? This action cannot be
            undone.
          </p>
          <form id="deleteForm" method="POST">
            <div class="flex justify-center gap-4">
              <button
                type="button"
                id="cancelBtn"
                class="px-4 py-2 rounded bg-gray-300 text-gray-800 hover:bg-gray-400"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="px-4 py-2 rounded bg-red-600 text-white hover:bg-red-700"
              >
                Delete
              </button>
            </div>
          </form>
        </div>
      </div>
    </main>

    <script>
      function filterUsers() {
        const input = document.getElementById("user-search");
        const filter = input.value.toLowerCase();
        const tableBody = document.getElementById("user-table-body");
        const rows = tableBody.getElementsByClassName("user-row");
        const noUsersFoundMessage = document.getElementById("no-users-message");
        const noFilteredUsersMessage = document.getElementById(
          "no-filtered-users-message"
        );
        let foundCount = 0;

        // Hide the initial "No users found." message if it exists
        if (noUsersFoundMessage) {
          noUsersFoundMessage.style.display = "none";
        }
        noFilteredUsersMessage.classList.add("hidden"); // Ensure this is hidden by default

        for (let i = 0; i < rows.length; i++) {
          const usernameCol = rows[i].getElementsByTagName("td")[0];
          const emailCol = rows[i].getElementsByTagName("td")[1];

          if (usernameCol || emailCol) {
            const usernameText = usernameCol
              ? usernameCol.textContent || usernameCol.innerText
              : "";
            const emailText = emailCol
              ? emailCol.textContent || emailCol.innerText
              : "";

            if (
              usernameText.toLowerCase().indexOf(filter) > -1 ||
              emailText.toLowerCase().indexOf(filter) > -1
            ) {
              rows[i].style.display = "";
              foundCount++;
            } else {
              rows[i].style.display = "none";
            }
          }
        }

        // Show "No users match your search." if no rows are visible and there were initial users
        if (foundCount === 0 && rows.length > 0) {
          noFilteredUsersMessage.classList.remove("hidden");
        } else if (foundCount === 0 && rows.length === 0) {
          // If there were no users to begin with, ensure the original message is shown
          if (noUsersFoundMessage) {
            noUsersFoundMessage.style.display = "";
          }
        }
      }

      // Initial check in case there are no users at all
      document.addEventListener("DOMContentLoaded", () => {
        const rows = document
          .getElementById("user-table-body")
          .getElementsByClassName("user-row");
        if (rows.length === 0) {
          const noUsersFoundMessage =
            document.getElementById("no-users-message");
          if (noUsersFoundMessage) {
            noUsersFoundMessage.style.display = "";
          }
        }
      });

      document.querySelectorAll(".open-confirm-modal").forEach((btn) => {
        btn.addEventListener("click", function () {
          const modal = document.getElementById("confirmModal");
          const form = document.getElementById("deleteForm");
          form.action = this.dataset.action;
          modal.classList.remove("hidden");
        });
      });

      document
        .getElementById("cancelBtn")
        .addEventListener("click", function () {
          document.getElementById("confirmModal").classList.add("hidden");
        });
    </script>
  </body>
</html>
